// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Header() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<header><div class=\"nav-container\"><ul class=\"nav\"><li><a href=\"/\">Home</a></li><li><a href=\"/store\">Store</a></li></ul><div id=\"role-buttons\"></div></div><h1>Go Webstore</h1><div class=\"user-info\"><p id=\"user-greeting\">Welcome, Guest</p><p id=\"invalid\"></p><button id=\"logout-btn\">Logout</button></div></header><script>\n        function getCookie(name) {\n            const value = `; ${document.cookie}`;\n            const parts = value.split(`; ${name}=`);\n            if (parts.length === 2) return parts.pop().split(';').shift();\n            return null;\n        }\n        const email = getCookie('user_email');\n        console.log(\"Updating name\", email);\n\n        if (email) {\n            fetch(`/get-user-info?email=${encodeURIComponent(email)}`)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(\"Server response:\", data);\n                    if (data.success) {\n                        const { fullName, role } = data;\n\n                        document.getElementById('user-greeting').textContent = `Welcome, ${fullName}`;\n                        document.getElementById('invalid').textContent = ''; \n\n                        const roleButtonsDiv = document.getElementById('role-buttons');\n                        if (role >= 1) {\n                            const orderEntryButton = document.createElement('button');\n                            orderEntryButton.textContent = 'Order Entry';\n                            orderEntryButton.onclick = () => {\n                                window.location.href = '/OrderEntry';\n                            };\n                            roleButtonsDiv.appendChild(orderEntryButton);\n\n                            const adminButton = document.createElement('button');\n                            adminButton.textContent = 'Products';\n                            adminButton.onclick = () => {\n                                window.location.href = '/Products';\n                            };\n                            roleButtonsDiv.appendChild(adminButton);\n                        }\n                        if (role >= 2) {\n                            const adminButton = document.createElement('button');\n                            adminButton.textContent = 'Admin';\n                            adminButton.onclick = () => {\n                                window.location.href = '/Admin';\n                            };\n                            roleButtonsDiv.appendChild(adminButton);\n                        }\n                    } else {\n                        document.getElementById('invalid').textContent = 'Invalid email or password';\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user info:', error);\n                    document.getElementById('invalid').textContent = 'An error occurred. Please try again.';\n                });\n        } else {\n            document.getElementById('invalid').textContent = 'No email found. Please log in.';\n        }\n\n        document.getElementById('logout-btn').addEventListener('click', function() {\n            window.location.href = '/logout';\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
